import{_ as p,c as e,b as a,f as n,d as l,e as c,a as o,r as i,o as u}from"./app-HaVGcHMr.js";const k={};function d(g,s){const t=i("RouteLink");return u(),e("div",null,[s[9]||(s[9]=a("h2",{class:"blog-title"},"Vue 系列（十）：聊聊 Diff 算法",-1)),a("p",null,[s[1]||(s[1]=n("在")),l(t,{to:"/vue/glance-renderer.html"},{default:c(()=>s[0]||(s[0]=[n("上一篇文章")])),_:1}),s[2]||(s[2]=n("中，我们对")),s[3]||(s[3]=a("strong",null,"渲染器",-1)),s[4]||(s[4]=n("进行了简单地介绍，本篇我们将以图文的方式对 ")),s[5]||(s[5]=a("code",null,"vue",-1)),s[6]||(s[6]=n(" 中的 ")),s[7]||(s[7]=a("code",null,"Diff",-1)),s[8]||(s[8]=n(" 算法进行详细地介绍。"))]),s[10]||(s[10]=o(`<h3 id="为什么需要-diff-算法" tabindex="-1"><a class="header-anchor" href="#为什么需要-diff-算法"><span>为什么需要 Diff 算法</span></a></h3><br><p>在上一篇文章中，我们要对节点进行更新的时候都是采用的简单粗暴的方式：<strong>卸载旧节点挂载新节点</strong>，比如：</p><details class="hint-container details"><summary>Details</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>在上一章中，如果我们要将上面的旧节点更新为新节点，需要把 <code>div</code> 下的 <code>p</code> 节点全部卸载掉，然后再挂载新的 <code>p</code> 节点，这样就会产生4次DOM操作：</p><ul><li>卸载两次 <code>p</code> 节点</li><li>挂载两次 <code>p</code> 节点</li></ul><p>可以看到，我们没有复用任何DOM，如果节点过多，这将会产生极大的性能开销。在上面这个例子中，我们其实没有必要去卸载掉 <code>p</code> 节点而是可以直接复用，这样我们只需要更新 <code>p</code> 节点内的文本即可，这样就只会产生2次DOM操作：</p><ul><li>更新两次 <code>p</code> 节点</li></ul><p>再来看一个例子：</p><details class="hint-container details"><summary>Details</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>这个例子如果按照之前的算法，则需要进行7次DOM操作：</p><ul><li>依次卸载 <code>p</code>、<code>div</code>、<code>span</code></li><li>依次挂载 <code>span</code>、<code>p</code>、<code>div</code></li><li>更新最后 <code>p</code> 节点中的文本内容</li></ul><p>通过观察上面的例子，我们其实可以发现除了最后的 <code>p</code> 节点，其他新节点和旧节点只是顺序发生了改变，但是因为 节点中没有 <code>key</code> 所以我们不能通过移动操作来更新节点，再引入<code>key</code>之前我们通过图示来理解一下diff算法是如何进行比较以及更新的。</p><p><img src="https://hh-oss-picture.miyapay.com/box/9126c62db3b866ff69fad3b0ed90700f.png" alt=""></p><p>可以看到，比较的级别一定是同级，不会跨级比较，如果父节点不相同，则直接丢弃，父节点相同则进行下一级的比较，下图展示了 diff 算法的比较以及更新过程：</p><p><img src="https://hh-oss-picture.miyapay.com/box/67ab9b7ddb6e2bdc5d9e46412cd010c7.png" alt=""></p><h3 id="引入key" tabindex="-1"><a class="header-anchor" href="#引入key"><span>引入Key</span></a></h3><br><p>在上一节图示的例子中，我们发现其实是可以通过移动节点来完成更新的，但是因为没有引入 <code>key</code>，所以无法进行移动操作。当然这时候可能你会有疑问了，为什么不通过节点的类型来判断是否可以进行节点复用从而通过移动节点来完成更新呢？我们来看下面的例子：</p><details class="hint-container details"><summary>Details</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>在上面的代码中，我们是可以通过移动节点来完成更新的，但是因为都是 <code>p</code> 节点，我们没有办法找到每个子节点之间的对应关系，所以无法进行复用，但是如果我们引入了 <code>key</code> 就可以很好地解决这个问题了：</p><details class="hint-container details"><summary>Details</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>可以看到，因为引入了 <code>key</code>，我们可以找到新旧节点之间的对应关系，这样就可以进行节点的复用了。对于上面这个例子，我们已经知道了可以复用节点，那么我们要如何去移动节点呢？我们先看一个不需要移动的例子：</p><details class="hint-container details"><summary>Details</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Text6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>我们根据上面的列子来走一遍节点的更新过程：</p><ul><li>遍历新节点，首先取新节点中的第一个节点 <code>p</code>，她的 key 为 1，我们这时去旧节点中寻找 <code>key=1</code> 的节点，看看能不能找到，发现能找到，说明可以进行节点复用，执行 patch 操作，并且该新节点在旧节点中的索引为 0。</li><li>取新节点中的第二个节点 <code>p</code>，她的 key 为 2，我们同样去旧节点中寻找 <code>key=2</code> 的节点，发现也能找到，执行 patch 操作，并且该新节点在旧节点中的索引为1。</li><li>取新节点中的第三个节点 <code>p</code>，她的 key 为 3，我们也去旧节点中寻找 <code>key=3</code> 的节点，同样也能找到，并且该新节点在旧节点中的索引为2，执行 patch 操作，并且该新节点在旧节点中的索引为2。</li></ul><p>如果我们在遍历新节点的过程中记录下<strong>她们在旧节点中的索引位置</strong>，并按照先后顺序进行排列，可以得到一个序列：0,1,2。可以发现这是一个递增序列，这说明我们<strong>不需要</strong>进行节点的移动。这其实就是判断节点是否需要移动的关键，了解这个关键点之后我们再用同样的方法看一下上面需要进行移动的那个例子：</p><ul><li>遍历新节点，首先取新节点中的第一个节点 <code>p</code>，她的 key 为 3，我们去旧节点中寻找 <code>key=3</code> 的节点，发现能找到，这时执行patch操作，我们记录下新节点在旧节点中的索引为 <strong>2</strong></li><li>然后去取新节点中的第二个节点 <code>p</code>，她的 key 为 1，我们去旧节点中寻找 <code>key=1</code> 的节点，发现能找到，执行 patch 操作，我们找到新节点在旧节点中的索引为 <strong>0</strong>，可以发现序列 <code>2,0</code> 不是一个递增的序列，那说明我们需要对 <code>key=1</code> 的旧节点进行移动，这里移动的就是<strong>真实节点</strong>了，我们需要将 <code>key=1</code> 的真实节点挂载到 <code>key=3</code> 的节点后面即可</li><li>最后我们取新节点中的第三个节点 <code>p</code>，她的 key 为 2，我们去旧节点中寻找 <code>key=2</code> 的节点，发现也能找到，执行 patch 操作，我们找到新节点在旧节点中的索引为 <strong>1</strong>，可以发现序列 <code>2,1</code>（这里需要注意，我们每次遍历的时候，记录的都是<strong>最大</strong>的索引）也不是一个递增的序列，那说明我们需要对 <code>key=2</code> 的旧节点进行移动，和上一次移动一样，我们将 <code>key=2</code> 的真实节点挂载到 <code>key=1</code> 的节点后面即可。</li></ul><p>移动过程的图示如下：</p><p><img src="https://hh-oss-picture.miyapay.com/box/045c75b860d762cf33aa8c30bcac3f10.png" alt=""></p><p>这里的核心就是：每次遍历新节点的时候，都记录遍历过程中遇到的<strong>最大索引</strong>，如果后面的索引值大于这个值，则刷新这个<strong>最大索引</strong>，并且不需要移动当前节点，如果后面的索引值小于这个值，则需要对真实节点进行移动。</p><p>通过上面的例子，我们知道了如何去进行节点复用以及怎样去移动节点，但是上面的例子没有处理删除节点和新增节点的情况。上面的例子只是一个节点复用和移动的思路，在 vue 中并不是采用我们如上说的这个算法，那么接下来我们就看看在 vue 中真正的 diff 算法是怎样的。</p><h3 id="快速-diff-算法" tabindex="-1"><a class="header-anchor" href="#快速-diff-算法"><span>快速 Diff 算法</span></a></h3><br><p><strong>快速Diff算法</strong>，顾名思义，该算法的速度非常快，所以 <code>vue3</code> 借鉴了该算法。那么接下来我们就来介绍一下diff算法的思路和实现实现原理。</p><p>我们先来看两段文本：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">I am a C++ programmer.</span>
<span class="line"></span>
<span class="line">I am a Java programmer.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>快速diff算法借鉴了纯文本diff算法的思路，她有一个预处理的过程，如下图：</p><p><img src="https://hh-oss-picture.miyapay.com/box/944ceca67926846e313743993b4c1010.png" alt=""></p><p>绿色文字就是预处理的内容，可以发现两端文字存在相同的地方，而这段相同的地方就是不需要进行diff核心操作的部分，红色的部分才是需要真正进行diff核心操作的。对于节点来说，快速diff算法也是这样的思路：</p><p><img src="https://hh-oss-picture.miyapay.com/box/a080d5d19eaa55c9855895abfe3f1626.png" alt=""></p><p>接下来我们就通过不同的场景来看看快速diff算法到底是如何工作的。</p><h3 id="只需要新增节点的场景" tabindex="-1"><a class="header-anchor" href="#只需要新增节点的场景"><span>只需要新增节点的场景</span></a></h3><details class="hint-container details"><summary>只需要新增的例子</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>观察上面这个例子，我们可以发现，新节点跟旧节点对比，新节点只是新增了两个子节点：<code>key-3</code>、<code>key-4</code>。那么我们现在来看看快速diff算法是如何将旧节点更新为新节点的：</p><p><strong>首先我们定义三个索引：<code>start</code>、<code>oldEnd</code>、<code>newEnd</code>，如下图所示，然后我们还需要两个while循环，一个从前遍历，一个从后遍历，当两个节点的key不相等的时候终止循环</strong></p><p><img src="https://hh-oss-picture.miyapay.com/box/04393f9516a2f736cb1725e199a7f773.png" alt=""></p><p>接下来我们就按照这个思路通过图示来完成上面这个例子的更新:</p><ul><li><strong>首先开启第一个while循环，从前开始遍历，当遍历到第二个节点的时候，发现新旧节点的key不相等，终止循环</strong></li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/cc0f85c8b80c15b6477d8e9b6419bf14.png" alt=""></p><ul><li><strong>然后开启第二个while循环，从后开始遍历，当遍历至倒数第二个节点的时候，发现新旧节点的key不相等，终止循环</strong></li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/0ca8d8a825bac51229f92912e8bf5fea.png" alt=""></p><ul><li><strong>通过上面两步，我们就处理完了前后相同的节点了，处理完的节点如下图所示，其中虚线框表示已经处理完成的节点，可以发现，当 <code>oldEnd &lt; start &amp;&amp; newEnd &gt;= start</code> 时，有新增的节点，从 <code>start</code> 到 <code>newEnd</code> 之间的节点都是需要新增的</strong></li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/2ea186bceb4c111154518e5e4f15fde6.png" alt=""></p><ul><li><strong>最后一步，我们只需要把新增的两个节点挂载到<code>key-2</code>的前面即可</strong></li></ul><h3 id="只需要删除节点的场景" tabindex="-1"><a class="header-anchor" href="#只需要删除节点的场景"><span>只需要删除节点的场景</span></a></h3><details class="hint-container details"><summary>只需要删除的例子</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>其实删除节点与新增节点非常相似，我们来看看具体的更新过程：</p><ul><li><strong>与新增节点一样，首先开启第一个while循环，从前开始遍历，当遍历到第二个节点的时候，发现新旧节点的key不相等，终止循环</strong></li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/f76dd4465de081fb94e4078c8c593f5e.png" alt=""></p><ul><li><strong>然后开启第二个while循环，从后开始遍历，当遍历至倒数第二个节点的时候，发现新旧节点的key不相等，终止循环</strong></li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/fd3c0f0b78e5c7392859b77b00bf747c.png" alt=""></p><ul><li><strong>通过上面两步，我们就处理完了前后相同的节点了，处理完的节点如下图所示，其中虚线框表示已经处理完成的节点，可以发现，当 <code>start &gt; newEnd &amp;&amp; start &lt;= oldEnd</code> 时，有需要删除的节点，从 <code>start</code> 到 <code>oldEnd</code> 之间的节点都是需要删除的</strong></li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/86d4969c41ab12457a289faa66687cc8.png" alt=""></p><ul><li><strong>最后一步，我们只需要把 <code>start</code> 到 <code>oldEnd</code> 之间的节点全部卸载掉即可</strong></li></ul><h3 id="需要移动节点的场景" tabindex="-1"><a class="header-anchor" href="#需要移动节点的场景"><span>需要移动节点的场景</span></a></h3><br><p>我们前面介绍的两种情况都是比较特殊的场景，前后两端的节点比较完成之后剩下的节点要么全部新增要么全部卸载，接下来我们会介绍需要进行节点移动的情况，这也是快速diff算法最复杂的地方。首先看如下节点：</p><details class="hint-container details"><summary>复杂场景</summary><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token comment">&lt;!--旧节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!--新节点--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-7<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>key-5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>通过下图可以直观地看到，只有前后两个节点可以复用，中间的节点既存在需要移动的，也存在需要新增和删除的情况：</p><p><img src="https://hh-oss-picture.miyapay.com/box/093a76356244fd2ac58596b9cf6d3dd2.png" alt=""></p><p>可以看到三个索引值 <code>start</code>、<code>oldEnd</code>、<code>newEnd</code> 不满足我们上面介绍过的两种情况：<code>oldEnd &lt; start &amp;&amp; newEnd &gt;= start</code> 和 <code>start &gt; newEnd &amp;&amp; start &lt;= oldEnd</code>，所以我们就需要增加额外的逻辑来处理这种情况。</p><ul><li>我们需要根据新节点构建出一个名为 <code>source</code> 的数组，这个数组的长度等于<code>未处理过的新节点</code>的长度，数组中每个元素的初始值为 <code>-1</code>，我们之后会用这个数组构建出一个<strong>最长递增子序列</strong>，初始化后的数组如下：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/87072bf5a3bafb4f1ad57b3fd2a7a014.png" alt=""></p><ul><li>然后我们还需要根据<strong>新节点</strong>建立一张索引表，这张索引表用来存储<strong>节点的key</strong>和<strong>节点索引</strong>之间的映射，我们可以通过遍历一遍新节点来构建出这样的索引表，如下图所示：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/e626341f20a007087f550d97342a4efc.png" alt=""></p><ul><li>接下来我们要遍历一遍<strong>旧节点</strong>，在遍历的过程中，用旧节点的 <code>key</code> 与索引表中的 <code>key</code> 进行匹配，如果能匹配上，我们先进行 <code>patch</code> 操作，然后填充 <code>source</code> 数组，这时会将 <code>source</code> 数组中的 <code>-1</code> 修改为<strong>旧节点的索引</strong>，即：<strong>新节点在原来旧节点中的位置。<strong>如果没有匹配上，说明该节点在新节点中不存在了，应该</strong>删除</strong>掉该旧节点，更新过程如下：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/ac60cca4be39db7b63c7da3663b5b066.png" alt=""></p><p>通过上面的操作，我们得到了一个全新的 <code>source</code> 数组：<code>[2, 3, 1, -1]</code>，为了接下来的移动操作，我们要根据 <code>source</code> 数组计算出一个<strong>最长递增子序列</strong>，那么何为最长递增子序列呢？举个例子，现在有一个数组：<code>[8, 7, 9, 10, 0, 11, 5]</code>，她的最长递增子序列就是：<code>[7, 9, 10, 11]</code>，可以看到，如果给定一个数值序列，找到它的一个子序列，并且该子序列中的值是递增的，我们就说该子序列是<strong>递增子序列</strong>，并且子序列中的元素<strong>不一定</strong>要在原序列中是<strong>连续</strong>的。那么接下来我们找到上述 <code>source</code> 数组中的递增子序列就简单了，我们很容易得出，上述数组中的递增子序列是 <code>[2, 3]</code>。</p><p>好了，有了这个最长递增子序列，我们就可以开始着手对节点进行移动了，在移动之前我们还需要对最长递增子序列 <code>[2, 3]</code> 进行处理，我们定义一个变量 <code>seq</code>，她的值是<strong>最长递增子序列中的元素在 <code>source</code> 数组中的位置索引</strong>，即 <code>[0, 1]</code>，如下图：</p><p><img src="https://hh-oss-picture.miyapay.com/box/cf072327613abdc224769e4b5bf465f9.png" alt=""></p><p>接下来我们就可以正式开始对剩余的节点进行处理了。</p><ul><li>首先我们对新节点进行重新的编号，其实就是忽略已经处理过的首尾节点，对剩余的节点进行编号，<strong>重新编号是为了让子序列 seq 与新的索引值产生对应关系</strong>，可以看到重新编号后的 <code>key-3</code> 和 <code>key-4</code> 对应的索引值为 <code>0</code> 和 <code>1</code> ，这样就跟 <code>seq</code> 产生了对应关系，这说明：<strong>在新的一组子节点中，重新编号后索引值为 <code>0</code> 和 <code>1</code> 的这两个节点在更新前后顺序没有发生变化</strong>。这才是重新编号的意义。</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/faa841028f09493df3f831569cc88668.png" alt=""></p><ul><li>然后我们需要定义两个变量：<code>seqEndIndex</code> 和 <code>sourceEndIndex</code>，她们分别指向 <code>seq</code> 的末尾和新的一组子节点（重新编号后）的末尾，如下图：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/9ec4bc1a9877af45006f1d5f50e87d62.png" alt=""></p><ul><li>变量定义好之后，我们从后向前遍历新节点，首先遇到 <code>key-7</code>，发现该节点在 <code>source</code> 数组中相同位置的值为 <code>-1</code>，那说明该节点是新增节点，需要进行挂载：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/c44fea29ab7fb7b3dce435f32fa476a2.png" alt=""></p><ul><li>接着 <code>sourceEndIndex</code> 上移，<code>sourceEndIndex = 2</code>，这时 <code>source[2] = 1</code> 说明节点不是新增的，接着我们判断 <code>sourceEndIndex</code> 是否和 <code>seq[seqEndIndex]</code> 是否相等，发现 <code>1 !== 2</code> 所以节点是需要移动的，我们找到节点的真实位置，然后进行移动：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/604e9968bdc6c852ac291febf4fb09f0.png" alt=""></p><ul><li><code>sourceEndIndex</code> 继续上移，此时 <code>sourceEndIndex = 1</code>，这时 <code>source[2] = 3</code> 说明节点不是新增的，接着我们判断 <code>sourceEndIndex</code> 是否和 <code>seq[seqEndIndex]</code> 是否相等，发现 <code>1 === 1</code> 所以节点是<strong>不需要移动</strong>的。这时我们只需要让 <code>sourceEndIndex</code> 和 <code>seqEndIndex</code> 继续上移即可：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/03937d017ff979a61494de6f3d382157.png" alt=""></p><ul><li><code>sourceEndIndex</code> 和 <code>seqEndIndex</code> 上移，发现跟上一步的处理方式一样，到此我们就处理完所有节点了：</li></ul><p><img src="https://hh-oss-picture.miyapay.com/box/a491456a6edf1569a589bf10e1379210.png" alt=""></p><h3 id="最后" tabindex="-1"><a class="header-anchor" href="#最后"><span>最后</span></a></h3><br> 本文简单介绍了vue中为什么需要diff算法以及快速diff算法在处理节点时的过程和思路。为了方便说明，都是采用图示的方式进行表达的，我们可以根据图示的过程进行编码，其实在实现快速diff算法的时候还是有很多细节需要去处理的，大家可以参考vue的源码以及社区中其他优秀的文章。`,97))])}const v=p(k,[["render",d],["__file","diff-in-vue.html.vue"]]),m=JSON.parse('{"path":"/vue/diff-in-vue.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"为什么需要 Diff 算法","slug":"为什么需要-diff-算法","link":"#为什么需要-diff-算法","children":[]},{"level":3,"title":"引入Key","slug":"引入key","link":"#引入key","children":[]},{"level":3,"title":"快速 Diff 算法","slug":"快速-diff-算法","link":"#快速-diff-算法","children":[]},{"level":3,"title":"只需要新增节点的场景","slug":"只需要新增节点的场景","link":"#只需要新增节点的场景","children":[]},{"level":3,"title":"只需要删除节点的场景","slug":"只需要删除节点的场景","link":"#只需要删除节点的场景","children":[]},{"level":3,"title":"需要移动节点的场景","slug":"需要移动节点的场景","link":"#需要移动节点的场景","children":[]},{"level":3,"title":"最后","slug":"最后","link":"#最后","children":[]}],"git":{},"filePathRelative":"vue/diff-in-vue.md","excerpt":"<h2 class=\\"blog-title\\">Vue 系列（十）：聊聊 Diff 算法</h2>\\n<p>在<a href=\\"/vue/glance-renderer.html\\" target=\\"_blank\\">上一篇文章</a>中，我们对<strong>渲染器</strong>进行了简单地介绍，本篇我们将以图文的方式对 <code>vue</code> 中的 <code>Diff</code> 算法进行详细地介绍。</p>\\n<h3>为什么需要 Diff 算法</h3>\\n<br>\\n<p>在上一篇文章中，我们要对节点进行更新的时候都是采用的简单粗暴的方式：<strong>卸载旧节点挂载新节点</strong>，比如：</p>"}');export{v as comp,m as data};
