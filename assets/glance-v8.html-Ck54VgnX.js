import{_ as n,c as a,a as l,o as t}from"./app-B2I_ZL3S.js";const p={};function s(r,e){return t(),a("div",null,e[0]||(e[0]=[l('<h2 class="blog-title">V8</h2><h3 id="v8-是一个虚拟机" tabindex="-1"><a class="header-anchor" href="#v8-是一个虚拟机"><span>V8 是一个虚拟机</span></a></h3><p>专门用来处理JavaScript代码</p><p>JIT：编译+解析两种方式处理js</p><p>流程： 1、初始化环境，包括堆栈环境、上下文等 2、将JS解析成AST 3、生成字节码（根据AST和作用域） 4、解释器处理字节码直接输出结果 5、对于热点代码通过编译器编译成机器码</p><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h3><p>函数也是一种对象</p><p>JS中有三种基本类型：</p><p>1、原始值，即值不可被修改，如果修改了则返回的是一个新的值，比如string、boolean、number、null、undefinded、bgint、symbol 2、对象 3、函数</p><p>函数可以被赋值、作为参数、作为返回值</p><h3 id="变量提升" tabindex="-1"><a class="header-anchor" href="#变量提升"><span>变量提升</span></a></h3><p>JS 代码在编译阶段会将变量提升到作用域中，如果是普通变量，则变量提升之后会赋值undefinded，如果是函数声明，则会将函数对象放到作用域中。</p><h3 id="继承" tabindex="-1"><a class="header-anchor" href="#继承"><span>继承</span></a></h3><p>对象的继承采用 <strong>proto</strong> 通过构造函数 prototype new 关键字 原型链</p><p>1、首先定义一个空对象，比如 const foo = {} 2、然后该空对象的原型指向构造函数的 protoType，即foo.<strong>proto</strong> = Foo.prototype 3、通过call来进行调用，将函数的this指向新创建的对象，Foo.call(foo, params,params)</p><h3 id="作用域链" tabindex="-1"><a class="header-anchor" href="#作用域链"><span>作用域链</span></a></h3><p>js 是基于词法作用域的，所以函数的作用域是按照其定义的位置来的</p>',17)]))}const i=n(p,[["render",s],["__file","glance-v8.html.vue"]]),h=JSON.parse('{"path":"/vue/glance-v8.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"V8 是一个虚拟机","slug":"v8-是一个虚拟机","link":"#v8-是一个虚拟机","children":[]},{"level":3,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":3,"title":"变量提升","slug":"变量提升","link":"#变量提升","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"作用域链","slug":"作用域链","link":"#作用域链","children":[]}],"git":{},"filePathRelative":"vue/glance-v8.md","excerpt":"<h2 class=\\"blog-title\\">V8</h2>\\n<h3>V8 是一个虚拟机</h3>\\n<p>专门用来处理JavaScript代码</p>\\n<p>JIT：编译+解析两种方式处理js</p>\\n<p>流程：\\n1、初始化环境，包括堆栈环境、上下文等\\n2、将JS解析成AST\\n3、生成字节码（根据AST和作用域）\\n4、解释器处理字节码直接输出结果\\n5、对于热点代码通过编译器编译成机器码</p>\\n<h3>函数</h3>\\n<p>函数也是一种对象</p>\\n<p>JS中有三种基本类型：</p>\\n<p>1、原始值，即值不可被修改，如果修改了则返回的是一个新的值，比如string、boolean、number、null、undefinded、bgint、symbol\\n2、对象\\n3、函数</p>"}');export{i as comp,h as data};
